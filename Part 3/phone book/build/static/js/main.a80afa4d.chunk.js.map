{"version":3,"sources":["components/Persons.js","components/PersonForm.js","components/Filter.js","services/phonebook.js","App.js","index.js"],"names":["Persons","props","name","number","onClick","deleteName","id","PersonForm","onSubmit","addName","value","newName","onChange","handleNameChange","newNumber","handleNumberChange","type","Filter","handleFilterChange","baseUrl","axios","get","then","response","data","newObject","post","put","delete","App","useState","setNewName","setNewNumber","persons","setPersons","newFilter","setNewFilter","errorMessage","setErrorMessage","useEffect","personService","initialPersons","person","find","window","confirm","setTimeout","catch","error","filter","Notification","message","className","event","console","log","target","preventDefault","e","length","nameObject","returnedName","concat","toLowerCase","includes","map","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a80afa4d.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Persons = (props) => {\r\n    return(\r\n        <p key={props.id}>{props.name} {props.number}<button onClick={props.deleteName}>delete</button></p>\r\n      )\r\n  }\r\n\r\nexport default Persons","import React from 'react'\r\n\r\nconst PersonForm = (props) => {\r\n  return(\r\n    <form onSubmit={props.addName}>\r\n      <div>\r\n        name: \r\n        <input value={props.newName} \r\n        onChange={props.handleNameChange} /><br/>\r\n        number:\r\n        <input value={props.newNumber}\r\n        onChange={props.handleNumberChange} />\r\n      </div>\r\n      <div>\r\n        <button type=\"submit\">add</button>\r\n      </div>\r\n    </form>\r\n  )\r\n}\r\nexport default PersonForm","import React from 'react'\r\n\r\n const Filter = (props) => {\r\n    return(\r\n      <input onChange={props.handleFilterChange}/>\r\n    )\r\n  }\r\n\r\n  \r\n\r\nexport default Filter","import axios from 'axios'\r\nconst baseUrl = '/api/persons'\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl)\r\n  return request.then(response => response.data)\r\n}\r\nconst create = newObject => {\r\n  const request = axios.post(baseUrl, newObject)\r\n  return request.then(response => response.data)\r\n}\r\nconst removePerson = id => {\r\n     return axios.delete(`${baseUrl}/${id}`)   \r\n}\r\nconst update = (id, newObject) => {\r\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n  return request.then(response => response.data)\r\n}\r\nexport default { \r\n  getAll, create, update, removePerson\r\n}","import React, { useState, useEffect } from 'react'\nimport Persons from './components/Persons.js'\nimport PersonForm from './components/PersonForm.js'\nimport Filter from './components/Filter.js'\nimport personService from './services/phonebook'\n\nconst App = () => {\n  //assign dummy data to persons\n  //initialise useState\n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber ] = useState('')\n  const [ persons, setPersons ] = useState([])\n  const [ newFilter, setNewFilter ] = useState('')\n  const [errorMessage, setErrorMessage] = useState(null)\n\n  useEffect(() => {\n    personService\n      .getAll()\n      .then(initialPersons => {\n        setPersons(initialPersons)\n      })\n  },[])\n  //Add the name to persons\n  const addName = (event) => {\n    event.preventDefault()\n    if (!(persons.filter(e => e.name === newName).length > 0)) \n    {\n      const nameObject = {\n        name: newName,\n        number: newNumber,\n      }\n      personService\n        .create(nameObject)\n        .then(returnedName => {\n        setPersons(persons.concat(returnedName))\n        setErrorMessage(\n          `Added '${newName}'`\n        )\n        setTimeout(() => {\n          setErrorMessage(null)\n        }, 5000)\n        setNewName('')\n        setNewNumber('')\n        })\n        .catch(error => {\n          setErrorMessage(\n            `${error.response.data}`\n          )\n          // this is the way to access the error message\n          console.log(error.response.data)\n        })\n    }\n    //Modify the number for a specific person\n    else\n    {\n      if (persons.filter(e => e.number !== newNumber))\n      {\n        const person = persons.find(person => person.name === newName)\n        if (window.confirm(`${person.name} is already added to the phonebook replace old number with the new one?`))\n        {\n          const nameObject = {\n            name: newName,\n            number: newNumber,\n          }\n          personService\n            .update(person.id,nameObject)\n            setErrorMessage(\n              `Added New Number for '${newName}'`\n            )\n            setNewName('')\n            setNewNumber('')\n        }\n    }\n    }\n  }\n  //Delete the user from the system\n  const deleteName = id => {\n    const person = persons.find(person => person.id === id)\n    if (window.confirm(`Delete ${person.name}?`)) \n    {\n      personService\n      .removePerson(id)\n      .then(response => {\n        setErrorMessage(\n          `Deleted '${person.name}'` \n        )\n        setTimeout(() => {\n          setErrorMessage(null)\n        }, 5000)\n      })\n      .catch(error => {\n        setErrorMessage(\n          `Information has already been removed from server`\n        )\n        setTimeout(() => {\n          setErrorMessage(null)\n        }, 5000)\n      })\n      setPersons(persons.filter(person => person.id !== id))\n    }\n  }\n  \n  const handleFilterChange = (event) => {\n    console.log(event.target.value)\n    setNewFilter(event.target.value)\n  }\n  const handleNameChange = (event) => {\n    console.log(event.target.value)\n    setNewName(event.target.value)\n  }\n  const handleNumberChange = (event) => {\n    console.log(event.target.value)\n    setNewNumber(event.target.value)\n  }\n  const Notification = ({ message }) => {\n    if (message === null) {\n      return null\n    }\n  \n    return (\n      <div className=\"message\">\n        {message}\n      </div>\n    )\n  }\n  \n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification message={errorMessage} />\n      <p>filter shown with \n        <Filter handleFilterChange={(event) => handleFilterChange(event)} />\n      </p>\n        <PersonForm addName={(event) => addName(event)} newNumber={newNumber} newName={newName} handleNameChange={(event) => handleNameChange(event)} handleNumberChange={(event) => handleNumberChange(event)}/>\n      <h2>Numbers</h2>\n        {persons.filter(person => person.name.toLowerCase().includes(newFilter.toLowerCase()))\n                .map(persons =>  \n          <Persons key={persons.id} name={persons.name} number={persons.number} deleteName={() => deleteName(persons.id)} />\n        )}\n      <div>debug: {newName}</div>\n    </div>\n  )\n}\nexport default App","import ReactDOM from 'react-dom'\nimport App from './App'\nimport './index.css'\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n)"],"sourceRoot":""}