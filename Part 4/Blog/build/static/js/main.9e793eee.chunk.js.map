{"version":3,"sources":["components/Blog.js","services/blog.js","App.js","index.js"],"names":["Blog","blog","deleteBlog","handleUpdatedLikesChange","updateLikes","updatedLikes","className","title","author","url","likes","onClick","value","onChange","onclick","baseUrl","axios","get","then","response","data","newObject","post","id","put","delete","Footer","style","color","fontStyle","fontSize","App","useState","blogs","setBlogs","newBlog","setNewBlog","newAuthor","setNewAuthor","newURL","setNewURL","newLikes","setNewLikes","errorMessage","setErrorMessage","setUpdatedLikes","useEffect","blogService","initialBlogs","event","console","log","target","Notification","message","blogsToShow","map","find","window","confirm","setTimeout","catch","error","filter","deleteBlogOf","n","changedBlog","returnedBlog","onSubmit","preventDefault","concat","type","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9e793eee.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Blog = ({ blog, deleteBlog, handleUpdatedLikesChange, updateLikes, updatedLikes }) => {\r\n\r\n  return (\r\n    <li className='blog'>\r\n      {blog.title}<br/>\r\n      {blog.author}<br/>\r\n      {blog.url}<br/>\r\n      {blog.likes} \r\n      <button onClick={deleteBlog}>Delete</button>\r\n      <input\r\n          value={updatedLikes}\r\n          onChange={handleUpdatedLikesChange}\r\n        />\r\n      <button onclick={updateLikes}>Update Likes</button>\r\n    </li>\r\n  )\r\n}\r\n\r\nexport default Blog\r\n","import axios from 'axios'\r\nconst baseUrl = '/api/blogs'\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst create = newObject => {\r\n  const request = axios.post(baseUrl, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n  return request.then(response => response.data)\r\n}\r\nconst removeBlog = id => {\r\n  return axios.delete(`${baseUrl}/${id}`)   \r\n}\r\n\r\nexport default { \r\n  getAll, create, update,removeBlog\r\n}","import React, { useState, useEffect } from 'react'\nimport Blog from './components/Blog'\nimport blogService from './services/blog'\n\nconst Footer = () => {\n  const footerStyle = {\n    color: 'red',\n    fontStyle: 'italic',\n    fontSize: 16\n  }\n  return (\n    <div style={footerStyle}>\n      <br />\n      <em>Blog app</em>\n    </div>\n  )\n}\n\nconst App = () => {\n  const [blogs, setBlogs] = useState([])\n  const [newBlog, setNewBlog] = useState('')\n  const [newAuthor, setNewAuthor] = useState('')\n  const [newURL, setNewURL] = useState('')\n  const [newLikes, setNewLikes] = useState('')\n  const [errorMessage, setErrorMessage] = useState(null)\n  const [updatedLikes, setUpdatedLikes] = useState('')\n  \n  useEffect(() => {\n    blogService\n      .getAll()\n      .then(initialBlogs => {\n      setBlogs(initialBlogs)\n    })\n  }, [])\n\n  const addBlog = (event) => {\n    event.preventDefault()\n    const blogObject = {\n      title: newBlog,\n      author: newAuthor,\n      url: newURL,\n      likes: newLikes  \n    }\n\n    blogService\n      .create(blogObject)\n        .then(returnedBlog => {\n        setBlogs(blogs.concat(returnedBlog))\n        setNewBlog('')\n        setNewAuthor('')\n        setNewURL('')\n        setNewLikes('')\n      })\n  }\n\n  const deleteBlogOf = id => {\n    const blog = blogs.find(blog => blog.id === id)\n    if (window.confirm(`Delete ${blog.title}?`)) \n    {\n      blogService\n      .removeBlog(id)\n      .then(response => {\n        setErrorMessage(\n          `Deleted '${blog.title}'` \n        )\n        setTimeout(() => {\n          setErrorMessage(null)\n        }, 5000)\n      })\n      .catch(error => {\n        setErrorMessage(\n          `Information has already been removed from server`\n        )\n        setTimeout(() => {\n          setErrorMessage(null)\n        }, 5000)\n      })\n      setBlogs(blog.filter(blog => blog.id !== id))\n    }\n  }\n  const updateLikes = id => {\n    const blog = blogs.find(n => n.id === id)\n    const changedBlog = { ...blog, likes: updatedLikes }\n  \n    blogService\n    .update(id, changedBlog)\n      .then(returnedBlog => {\n      setBlogs(blogs.map(blog => blog.id !== id ? blog : returnedBlog))\n    })\n    .catch(error => {\n      setErrorMessage(\n        `Blog '${blog.title}' was already removed from server`\n      )\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 5000)\n      setBlogs(blog.filter(n => n.id !== id))\n    })    \n  }\n  const handleBlogChange = (event) => {\n    console.log(event.target.value)\n    setNewBlog(event.target.value)\n  }\n  const handleAuthorChange = (event) => {\n    console.log(event.target.value)\n    setNewAuthor(event.target.value)\n  }\n  const handleURLChange = (event) => {\n    console.log(event.target.value)\n    setNewURL(event.target.value)\n  }\n  const handleLikesChange = (event) => {\n    console.log(event.target.value)\n    setNewLikes(event.target.value)\n  }\n  const handleUpdatedLikesChange = (event) => {\n    console.log(event.target.value)\n    setUpdatedLikes(event.target.value)\n  }\n  \n\n  const Notification = ({ message }) => {\n    if (message === null) {\n      return null\n    }\n  \n    return (\n      <div className=\"message\">\n        {message}\n      </div>\n    )\n  }\n\n  const blogsToShow = blogs\n\n  return (\n    <div>\n      <h1>Blog</h1>\n      <Notification message={errorMessage} />\n      <ul>\n        {blogsToShow.map(blog => \n            <Blog\n              key={blog.id}\n              blog={blog}\n              deleteBlog={() => deleteBlogOf(blog.id)}\n              handleUpdatedLikesChange={handleUpdatedLikesChange}\n              updateLikes={() => updateLikes(blog.id)}\n              updatedLikes={updatedLikes}\n              />\n              )}\n      </ul>\n      <form onSubmit={addBlog}>\n        Title:<br/><input\n          value={newBlog}\n          onChange={handleBlogChange}\n        /><br/>\n        Author:<br/><input\n          value={newAuthor}\n          onChange={handleAuthorChange}\n        /><br/>\n        URL:<br/><input\n          value={newURL}\n          onChange={handleURLChange}\n        /><br/>\n        Likes:<br/><input\n          value={newLikes}\n          onChange={handleLikesChange}\n        /><br/><br/>\n        <button type=\"submit\">save</button>\n      </form>\n      <Footer />  \n    </div>\n  )\n}\n\nexport default App","import ReactDOM from 'react-dom'\n\nimport App from './App.js'\nimport './index.css'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}